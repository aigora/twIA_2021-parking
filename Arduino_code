#include<Servo.h>
#define Echo 3
#define Trig 2
#define Vel_Son 34000.0
#define LED_rojo 13
#define LED_verde 12
#define boton_entrada 8
#define boton_salida 9
#define aforo 20

Servo servomotor;
float distancia, tiempo;
int Be, Bs, coches = 0;
char opc;

void setup() {
  
  Serial.begin(9600);

  servomotor.attach(11);
  servomotor.write(0);
  pinMode(boton_entrada, INPUT);
  pinMode(boton_salida, INPUT); 
  pinMode (Echo, INPUT);
  pinMode (Trig, OUTPUT);
  pinMode (LED_rojo, OUTPUT);
  pinMode (LED_verde, OUTPUT);

}

void loop() {

  inicio();

  
  Be = digitalRead(boton_entrada);
  Bs = digitalRead(boton_salida);

  digitalWrite(LED_rojo, HIGH);
  digitalWrite(LED_verde, LOW);
  
  tiempo = pulseIn(Echo, HIGH);
  distancia = tiempo * 0.000001 * Vel_Son / 2.0;
  Serial.print(distancia);
  Serial.print(" cm\n");
  Serial.print(coches);
  Serial.print(" coches\n");
  delay(500);
  
  if (Be==HIGH){
    delay(100);
    
    if(Be==HIGH){

      if(coches == aforo){
    Serial.print("Aforo completo, por favor dé la vuelta\n");
  }
  else if(coches<=aforo){

    
      String str = ("e");
      Serial.println(str);

      opc = procesar_mensaje();  

      if (opc == 'e'){
        
        do{
          servomotor.write(90);
          digitalWrite(LED_rojo, LOW);
          digitalWrite(LED_verde, HIGH);
          inicio();
          tiempo = pulseIn(Echo, HIGH);
          distancia = tiempo * 0.000001 * Vel_Son / 2.0;
          Serial.print(distancia);
          Serial.print(" cm\n");
          delay(500);
        }while(distancia <= 10);

      coches++;

      String str = ("El coche ha entrado");
      Serial.println(str);

      servomotor.write(0);
      digitalWrite(LED_rojo, HIGH);
      digitalWrite(LED_verde, LOW);
      delay(500);}
    }
  }
 }
  if (Bs==HIGH){
    delay(100);
    
    if(Bs==HIGH){

      String str = ("s");
      Serial.println(str);

      opc = procesar_mensaje();

      if (opc == 'e'){

        do{
          servomotor.write(90);
          digitalWrite(LED_rojo, LOW);
          digitalWrite(LED_verde, HIGH);
          inicio();
          tiempo = pulseIn(Echo, HIGH);
          distancia = tiempo * 0.000001 * Vel_Son / 2.0;
          Serial.print(distancia);
          Serial.print(" cm\n");
          delay(500);
        }while(distancia <= 10);

      coches--;  
      String str = ("El coche ha salido");
      Serial.println(str);
        
      servomotor.write(0);
      digitalWrite(LED_rojo, HIGH);
      digitalWrite(LED_verde, LOW);
      delay(500);}
      }
      
      if(distancia > 10){
        servomotor.write(0);
        digitalWrite(LED_rojo, HIGH);
        digitalWrite(LED_verde, LOW);
        delay(500);
      }
   }
}

void inicio(){

  digitalWrite(Trig, LOW);
  delayMicroseconds(2);
  digitalWrite(Trig, HIGH);
  delayMicroseconds(10);
  digitalWrite(Trig, LOW);
}

char procesar_mensaje(){
  String cadena = Serial.readStringUntil('\n'); // Lee mensaje
  
  if (cadena.equals("Registro completado")){ // Entre las comillas se pone el texto del mensaje que se espera  

      return 'e';
        // Acciones asociadas a ese mensaje
    }
  else if (cadena.equals("Pago realizado")){ // Y así sucesivamente con todos los posibles mensajes
      
      return 's';
    }
}
